name: Build, deploy, and release ASP.Net Core app to Azure Web App - bdsagroup16chirpremotedb

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Tag for the release (e.g., v1.0.0)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build src/Chirp.CSVDBService --configuration Release

      - name: dotnet publish
        run: dotnet publish src/Chirp.CSVDBService -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    permissions:
      id-token: none  # Adjust this if you are using service principal authentication

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EDDC0F0EF9DB4770B08C1775416ED4FB }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_E2E7DFF2BE0F43A39820045011F70A2E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_308084345AC04BD8B3695AB012974585 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'bdsagroup16chirpremotedb'
          package: ${{ runner.temp }}/.net-app

  release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release-tag }}  # This creates a release with the provided tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
