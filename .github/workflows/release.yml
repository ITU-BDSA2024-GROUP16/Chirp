name: Release Chirp Executables

on:
  # Trigger workflow on tag creation matching 'v*'
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x' # Use the appropriate .NET version for your project

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Run tests
      - name: Run tests
        run: dotnet test

      # Build for Windows
      - name: Build Chirp CLI for Windows
        run: dotnet publish -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ./publish/win

      # Build for macOS
      - name: Build Chirp CLI for macOS
        run: dotnet publish -c Release -r osx-x64 --self-contained -p:PublishSingleFile=true -o ./publish/macos

      # Build for Linux
      - name: Build Chirp CLI for Linux
        run: dotnet publish -c Release -r linux-x64 --self-contained -p:PublishSingleFile=true -o ./publish/linux

      # Compress the executables into ZIP files
      - name: Create ZIP for Windows Executable
        run: zip -j ./publish/Chirp.CLI-Windows.zip ./publish/win/Chirp.CLI.exe

      - name: Create ZIP for macOS Executable
        run: zip -j ./publish/Chirp.CLI-macOS.zip ./publish/macos/Chirp.CLI

      - name: Create ZIP for Linux Executable
        run: zip -j ./publish/Chirp.CLI-Linux.zip ./publish/linux/Chirp.CLI

      # Create a release and upload the ZIP files
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # Upload Windows ZIP to the release
      - name: Upload Windows ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/Chirp.CLI-Windows.zip
          asset_name: Chirp.CLI-Windows.zip
          asset_content_type: application/zip

      # Upload macOS ZIP to the release
      - name: Upload macOS ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/Chirp.CLI-macOS.zip
          asset_name: Chirp.CLI-macOS.zip
          asset_content_type: application/zip

      # Upload Linux ZIP to the release
      - name: Upload Linux ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/Chirp.CLI-Linux.zip
          asset_name: Chirp.CLI-Linux.zip
          asset_content_type: application/zip
